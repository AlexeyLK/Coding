#pragma once

#include <istream>
#include <ostream>

class BitInputStream final {
// Ѕазовый поток байтов дл€ чтени€.
private: std::istream& input;
//Ћибо в диапазоне [0x00, 0xFF], если биты доступны, либо -1, если достигнут конец потока.
private: int currentByte;
// оличество оставшихс€ битов в текущем байте, всегда между 0 и 7 (включительно).
private: int numBitsRemaining;

//—оздает поток ввода битов на основе заданного потока ввода байтов.
public: explicit BitInputStream(std::istream& in);

//„итает бит из этого потока. ¬озвращает 0 или 1, если бит доступен, или -1, если
// конец потока достигнут.  онец потока всегда происходит на границе байта.
public: int read();
// „итает бит из этого потока. ¬озвращает 0 или 1, если бит доступен, или выдает исключение
// если достигнут конец потока.  онец потока всегда происходит на границе байта.
public: int readNoEof();
};


class BitOutputStream final {
		// Ѕазовый поток байтов дл€ записи.
private: std::ostream& output;
		// Ќакопленные биты дл€ текущего байта всегда наход€тс€ в диапазоне [0x00, 0xFF].
private: int currentByte;
		// оличество накопленных битов в текущем байте, всегда между 0 и 7 (включительно).
private: int numBitsFilled;

		 // —оздает поток вывода битов на основе заданного потока вывода байтов.
public: explicit BitOutputStream(std::ostream& out);

		// ѕишет бит в поток. ƒанный бит должен быть 0 или 1.
public: void write(int b);

		//ƒописывает миним кол-вом "0" до до достижени€ границы со следующим байтом
		//не закрывает поток вывода
public: void finish();
};